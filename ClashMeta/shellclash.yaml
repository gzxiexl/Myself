#ShellClash 配置 rule-set 方案
proxy-providers:
  # 获取机场订阅链接内的所有节点
  🛫 我的机场:
    type: http
    # 机场订阅链接，使用 Clash 链接
    url: "https://dy.ssrla.de/link/8oeOWH40JDaAtcHY?clash=1"
    path: ./proxies/airport1.yaml
    interval: 43200
    # 初步筛选需要的节点，可有效减轻路由器压力，支持正则表达式，不筛选可删除此配置项
    filter: "香港|台湾|日本|韩国|新加坡|美国"
    health-check:
      enable: true
      # 未选择到当前策略组时，不会进行测试，有多个 proxy-providers 时可使用
      lazy: true
      url: "https://www.gstatic.com/generate_204"
      interval: 600

proxy-groups:
  # 手动选择节点；根据 proxy-groups 中（下方）国家或地区的节点名称对 proxies 进行增删改，须一一对应
  - {name: 🚀 节点选择, type: select, proxies: [🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点, 👍 高级节点]}

  # Speedtest 测速网站：选择“全球直连”为测试本地网络速度（运营商网络速度），可选择其它节点用于测试机场节点速度
  - {name: 📈 网络测速, type: select, proxies: [🎯 全球直连, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🇸🇬 新加坡节点, 🇺🇸 美国节点]}

  - {name: 🐟 漏网之鱼, type: select, proxies: [🎯 全球直连, 🚀 节点选择]}

  - {name: 🪜 代理域名, type: select, proxies: [🚀 节点选择, 🎯 全球直连]}

  - {name: ✈️ Telegram, type: select, proxies: [🚀 节点选择]}

  - {name: ⛔️ 广告域名, type: select, proxies: [🛑 全球拦截]}

  - {name: 🎯 全球直连, type: select, proxies: [DIRECT]}

  - {name: 🛑 全球拦截, type: select, proxies: [REJECT]}

  # -----------------国家或地区节点----------------------

  # 自动选择节点，即按照 url 测试结果使用延迟最低的节点；容差大于 100ms 就会切换到延迟低的那个节点；未选择到当前策略组时不会进行延迟测试；筛选出“香港”节点，支持正则表达式
  - {name: 👍 高级节点, type: load-balance, strategy: consistent-hashing, lazy: true, use: [🛫 我的机场], filter: "专线"}
  
  - {name: 🇭🇰 香港节点, type: load-balance, strategy: consistent-hashing, lazy: true, use: [🛫 我的机场], filter: "(?=.*(香港).)^((?!(专线)).)*$"}

  # 节点负载均衡，即将请求均匀分配到多个节点上，优点是更稳定，速度可能有提升；将相同顶级域名的请求分配给策略组内的同一个代理节点；推荐在节点复用比较多的情况下使用
  - {name: 🇨🇳 台湾节点, type: load-balance, strategy: consistent-hashing, lazy: true, use: [🛫 我的机场], filter: "(?=.*(台湾).)^((?!(专线)).)*$"} 

  - {name: 🇯🇵 日本节点, type: load-balance, strategy: consistent-hashing, lazy: true, use: [🛫 我的机场], filter: "(?=.*(日本).)^((?!(专线)).)*$"}

  - {name: 🇰🇷 韩国节点, type: load-balance, strategy: consistent-hashing, lazy: true, use: [🛫 我的机场], filter: "(?=.*(韩国).)^((?!(专线)).)*$"}

  - {name: 🇸🇬 新加坡节点, type: load-balance, strategy: consistent-hashing, lazy: true, use: [🛫 我的机场], filter: "(?=.*(新加坡).)^((?!(专线)).)*$"}

  - {name: 🇺🇸 美国节点, type: load-balance, strategy: consistent-hashing, lazy: true, use: [🛫 我的机场], filter: "(?=.*(美国).)^((?!(专线)).)*$"}

# 规则集 .yaml 文件；每天自动更新
rule-providers:
  ads:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/DustinWin/clash-ruleset@release/ads.yaml"
    path: ./ruleset/ads.yaml
    interval: 86400

  networktest:
    type: http
    behavior: classical
    url: "https://cdn.jsdelivr.net/gh/DustinWin/clash-ruleset@release/networktest.yaml"
    path: ./ruleset/networktest.yaml
    interval: 86400

  proxy:
    type: http
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/DustinWin/clash-ruleset@release/proxy.yaml"
    path: ./ruleset/proxy.yaml
    interval: 86400

  telegramip:
    type: http
    behavior: ipcidr
    url: "https://cdn.jsdelivr.net/gh/DustinWin/clash-ruleset@release/telegramip.yaml"
    path: ./ruleset/telegramip.yaml
    interval: 86400

rules:
  - DOMAIN-SUFFIX,lscr.io,🚀 节点选择
  - DOMAIN-SUFFIX,theme-park.dev,🚀 节点选择
  - DOMAIN-SUFFIX,fanart.tv,🚀 节点选择
  - DOMAIN-KEYWORD,tmdb,🚀 节点选择
  - DOMAIN-KEYWORD,themoviedb,🚀 节点选择
  # 自定义规则优先放前面
  - RULE-SET,ads,⛔️ 广告域名
  - RULE-SET,networktest,📈 网络测速
  - RULE-SET,proxy,🪜 代理域名
  - RULE-SET,telegramip,✈️ Telegram
  - MATCH,🐟 漏网之鱼